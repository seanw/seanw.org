<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sean Wilson, Web and Mobile Developer, Edinburgh, UK</title>
    <description>Experienced developer offering web, mobile (Android, iOS, PhoneGap), SEO, cloud (Heroku, AWS, Google Apps), JavaScript and WordPress services.</description>
    <link>https://www.seanw.org/</link>
    <atom:link href="https://www.seanw.org/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 22 Jan 2015 11:09:06 +0000</pubDate>
    <lastBuildDate>Thu, 22 Jan 2015 11:09:06 +0000</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Hiding visits to your own site from Google Analytics</title>
        <description>&lt;p&gt;When working on a site, it’s common to browse it yourself from multiple browsers, multiple devices and multiple locations for testing purposes. For analytics about your user behaviour to be useful, we need a way to exclude this internal traffic from Google Analytics reports. In this post I explain a method I found useful for hiding visits to your own site when you want to be able to test your site from any browser or any location.&lt;/p&gt;

&lt;p&gt;Google recommends &lt;a href=&quot;https://support.google.com/analytics/answer/1034840?hl=en-GB&quot;&gt;setting up a filter on an IP range&lt;/a&gt; within Google Analytics to filter out internal traffic. This would be a foolproof method if your work IP address is always within a set range but isn’t going to help if you sometimes browse from a different location. However, this method could be used in combination with the following one I prefer.&lt;/p&gt;

&lt;h2 id=&quot;excluding-traffic-using-a-custom-dimension&quot;&gt;Excluding traffic using a custom dimension&lt;/h2&gt;

&lt;p&gt;My preferred method is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Use a hidden page on your site that you initially browse to that attaches a
&lt;a href=&quot;https://developers.google.com/analytics/devguides/platform/customdimsmets&quot;&gt;custom dimension&lt;/a&gt; to your Google Analytic’s user.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Filter that user’s activity from reports by looking for that custom dimension from within the Google Analytics web interface.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As well as working from any location, this also has the advantage of letting you confirm analytics activity is being successfully sent unlike approaches that disable the Google Analytics script for internal users altogether. I’ll now explain how to implement the above approach.&lt;/p&gt;

&lt;h3 id=&quot;creating-a-custom-dimension-for-internal-users&quot;&gt;Creating a custom dimension for internal users&lt;/h3&gt;

&lt;p&gt;First you have to create a custom Google Analytics dimension:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Visit the Google Analytics admin panel and select the site you’re working on from the “property” field.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Select “Custom Definitions”, “Custom Dimensions” then “New Custom Dimension”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create a new dimension with the name “InternalUser” with “Scope” set to “User”. This is the label we’ll use to track internal users.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;excluding-your-custom-dimension-from-reports&quot;&gt;Excluding your custom dimension from reports&lt;/h3&gt;

&lt;p&gt;Next, you need to exclude any users that have the custom dimension attached to them from reports:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;From the Google Analytics admin panel, select “Filters” then “New Filter”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Set the filter type to “Custom”, set “Filter Field” to “Internal User”, set “Filter Pattern” to “1” then save the filter.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;a-hidden-page-to-label-you-as-an-internal-user&quot;&gt;A hidden page to label you as an internal user&lt;/h3&gt;

&lt;p&gt;You then need to create a hidden page on your site that sets this dimension for the current user by sending a message to Google Analytics. You can do this with HTML such as the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&amp;lt;!DOCTYPE HTML&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
    &amp;lt;meta name=&quot;robots&quot; content=&quot;noindex,nofollow&quot;/&amp;gt;
    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;p&amp;gt;Internal user dimension for Google Analytics set so activity from
    this browser can be filtered. Redirecting to homepage...&amp;lt;/p&amp;gt;

    &amp;lt;script&amp;gt;
      &amp;lt;!-- Standard Google Analytics snippet --&amp;gt;
      (function(i,s,o,g,r,a,m){i[&#39;GoogleAnalyticsObject&#39;]=r;i[r]=i[r]
      ||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new
      Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=
      1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,&#39;script&#39;,
      &#39;//www.google-analytics.com/analytics.js&#39;,&#39;ga&#39;);

      ga(&#39;create&#39;, /*YOUR_GOOGLE_ANALYTICS_ID_HERE*/, &#39;auto&#39;);
      ga(&#39;require&#39;, &#39;displayfeatures&#39;);
      ga(&#39;send&#39;, &#39;pageview&#39;);
      &amp;lt;!------------------------------&amp;gt;

      ga(&#39;set&#39;, &#39;InternalUser&#39;, &#39;1&#39;);
      setTimeout(function() { window.location.href = &quot;/&quot;; }, 5000);
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The JavaScript code does the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Uses the standard script snippet for loading Google Analytics (remember to replace the placeholder text with the ID for your site!).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sets the “InternalUser” dimension you just created for the current user.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Redirects the user back to the homepage after a delay.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We also set the &lt;code&gt;robots&lt;/code&gt; metatag so web crawlers won’t list this page in search results.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Now any time you want to browse your own site on a different browser or device, simply go to your hidden page first and your pesky internal traffic will be filtered out of your Google Analytics reports. Hopefully you’ll find this a useful way for eliminating noise from your user analytics.&lt;/p&gt;
</description>
        <pubDate>Thu, 22 Jan 2015 00:00:00 +0000</pubDate>
        <link>https://www.seanw.org/blog/hide-own-traffic-in-google-analytics</link>
        <guid isPermaLink="true">https://www.seanw.org/blog/hide-own-traffic-in-google-analytics</guid>
        
        
      </item>
    
      <item>
        <title>submit-sitemap: Node.js module to submit sitemaps to search engines</title>
        <description>&lt;p&gt;I’ve just uploaded a small &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; module for submitting/pinging sitemaps to search engines called &lt;a href=&quot;https://github.com/seanw/submit-sitemap&quot;&gt;submit-sitemap&lt;/a&gt;. This is meant to be used after you’ve made updates to your site to encourage crawlers to reindex your pages.&lt;/p&gt;

&lt;p&gt;The module currently submits your sitemap to &lt;a href=&quot;http://www.google.com&quot;&gt;Google&lt;/a&gt; and &lt;a href=&quot;http://www.bing.com&quot;&gt;Bing&lt;/a&gt;. This saves you from having to use &lt;a href=&quot;https://support.google.com/sites/answer/100283?hl=en&quot;&gt;Google’s webmaster tools&lt;/a&gt; and &lt;a href=&quot;http://www.bing.com/webmaster/help/how-to-submit-sitemaps-82a15bd4&quot;&gt;Bing’s webmaster tools&lt;/a&gt; to submit your sitemap manually.&lt;/p&gt;

&lt;p&gt;For example, I’ve used this in the last stage of &lt;a href=&quot;http://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt; build scripts that generate and deploy static sites in the following way:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Generate a static site using &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Generate a sitemap file for the static site using &lt;a href=&quot;https://www.npmjs.com/package/gulp-sitemap&quot;&gt;gulp-sitemap&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Upload the site and sitemap to &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github pages&lt;/a&gt; using &lt;a href=&quot;https://github.com/rowoot/gulp-gh-pages&quot;&gt;gulp-gh-pages&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Finally, use submit-sitemap to submit the sitemap to search engines for indexing.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To install the module:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install submit-sitemap --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To submit your sitemap:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;submitSitemap&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;submit-sitemap&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;submitSitemap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;yourSitemapUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://www.seanw.org/sitemap.xml&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;submitSitemap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;yourSitemapUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The optional callback parameter can be used to respond to success and failure:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;submitSitemap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;yourSitemapUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;On success, &lt;code&gt;err&lt;/code&gt; will be undefined.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On error, &lt;code&gt;err&lt;/code&gt; will be set to an error message. This happens if the sitemap URL could not be reached or any of the sitemap submission attempts failed.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find out more about the submit-sitemap module on &lt;a href=&quot;https://www.npmjs.com/package/submit-sitemap&quot;&gt;npmjs.com&lt;/a&gt; and &lt;a href=&quot;https://github.com/seanw/submit-sitemap&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 21 Jan 2015 00:00:00 +0000</pubDate>
        <link>https://www.seanw.org/blog/submit-sitemap-with-node-js</link>
        <guid isPermaLink="true">https://www.seanw.org/blog/submit-sitemap-with-node-js</guid>
        
        
      </item>
    
  </channel>
</rss>
